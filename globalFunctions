logp()
{
aha="$installationDirectory/externalModules/aha/aha"
cat $logFile | aha > $logHtmlFile

case "$1" in
	info)
		echo -e "\e[32m\e[1m* \e[0m$2"
	;;
	warning)
		echo -e "\033[31m\e[1m* \e[0m$2"
	echo 
	;;
	fatal)
		echo -e "\e[31m\e[1m* \e[0m\e[30m\e[101m$2"
		echo -e "\e[31m\e[1m* \e[0m\e[30m\e[101mDruk een toets om opnieuw op te starten...\e[0m"
		read && reboot
	;;
	beginsection)
		echo -e "\e[33m**********************************************"
		echo -e "\e[33m||||||||||||||||||||||||||||||||||||||||||||||"
	;;
	endsection)
		echo -e "\e[33m||||||||||||||||||||||||||||||||||||||||||||||"
		echo -e "\e[33m**********************************************"
	;;
esac
}


waitForNetwork()
{
while :;
do
	timeout 5 ping -c1 8.8.8.8 1>/dev/null 2>/dev/null
	if [ $? -eq 0 ]; then
		logp info "Het netwerk is toegankelijk!"
		return 0
	fi

	sleep 1 
done
}

isHostUp()
{
if timeout 5 curl -sSf $remoteIsoHostStatusUrl> /dev/null; then
	return 0
else
	return 1
fi
}

getHostStatus()
{
timeout 5 curl $remoteIsoHostStatusUrl 2>/dev/null
}

isGitRepoUptodate()
{
git fetch

if git diff origin/master --quiet HEAD --; then
	logp info "Installatie up-to-date."
	return 0
else
	logp warning "Installatie veroudert..."
	return 1
fi
}

